NAME            = 'samples'
VERSION         = '0.1'

options = configure = distclean = lambda p: None

def build(bld):
    samples = {'check_valid_six'                     : 'cli six.sicd six.sidd',
               'crop_sicd'                           : 'cli six.sicd',
               'crop_sidd'                           : 'cli six.sidd',
               'sicd_output_plane_pixel_to_lat_lon'  : 'cli six.sicd',
               'project_slant_to_output'             : 'cli io six six.sicd sio.lite',
               'image_to_scene'                      : 'six.sicd six.sidd',
               'round_trip_six'                      : 'cli six.convert six.sicd six.sidd',
               'test_create_sicd'                    : 'cli six.sicd sio.lite',
               'test_create_sicd_from_mem'           : 'cli six.sicd',
               'test_create_sidd_from_mem'           : 'cli six.sicd six.sidd',
               'test_create_sidd_with_compressed_byte_provider' : 'cli six.sidd',
               'test_create_sidd_legend'             : 'cli six.sidd',
               'test_create_sidd'                    : 'cli six.sicd six.sidd sio.lite',
               'test_dump_images'                    : 'cli six.sicd six.sidd sio.lite',
               'test_extract_xml'                    : 'cli nitf xml.lite',
               'test_image_to_scene'                 : 'six.sicd six.sidd',
               'test_large_offset'                   : 'six.sicd six.sidd io mem',
               'test_parse_xml'                      : 'six.sicd six.sidd',
               'test_six_xml_parsing'                : 'six.sicd six.sidd',
               'test_compare_sidd'                   : 'cli six.sicd six.sidd' }

    for sample, module_deps in samples.items():
        bld.program_helper(module_deps=module_deps,
                           source=sample + '.cpp',
                           name=sample)

    bld(features='add_targets', target='six-samples',
        targets_to_add=samples.keys())
